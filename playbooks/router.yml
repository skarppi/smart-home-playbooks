- name: Router to wlan access point
  hosts: all
  vars_files: common.yml 
  become: yes
  tasks:
  - apt: 
      pkg:
      - dnsmasq
      - ufw
      - ntp
  - ufw:
      rule: allow
      src: '{{ufw_allow_from}}'
  - ufw:
      rule: allow
      src: '{{wg_ip_range}}'
  - ufw:
      rule: allow
      direction: in
      interface: eth0
  - ufw:
      rule: allow
      direction: in
      src: '{{lan_ip}}/24'
  - ufw:
      rule: allow
      direction: in
      src: '{{router_ip}}/24'
  - ufw:
      state: enabled
  - ansible.builtin.blockinfile:
      path: /etc/dhcpcd.conf
      block: |
        interface eth0
            static ip_address={{lan_ip}}/24
  - ansible.builtin.copy:
      src: etc/dnsmasq.d/router.conf
      dest: /etc/dnsmasq.d/router.conf
      owner: root
      group: root
  - name: Use nearby NTP servers
    ansible.builtin.replace:
      path: /etc/ntp.conf
      regexp: '^pool (\d).debian.pool.ntp.org iburst$'
      replace: 'pool \1.fi.pool.ntp.org iburst'
  - name: Restart ntp
    ansible.builtin.systemd:
      state: restarted
      enabled: yes
      daemon_reload: yes
      name: ntp
  - name: Enable ip forward
    ansible.builtin.lineinfile:
      path: /etc/sysctl.conf
      regexp: "^#net.ipv4.ip_forward=1"
      line: "net.ipv4.ip_forward=1"
  - name: Enable nat postrouting
    ansible.builtin.iptables:
      table: nat
      chain: POSTROUTING
      out_interface: wwan0
      jump: MASQUERADE
  - name: Enable nat forward down
    ansible.builtin.iptables:
      chain: FORWARD
      in_interface: wwan0
      out_interface: eth0
      state: present
      ctstate: RELATED,ESTABLISHED
      jump: ACCEPT
  - name: Enable nat forward up
    ansible.builtin.iptables:
      chain: FORWARD
      in_interface: eth0
      out_interface: wwan0
      jump: ACCEPT
  - ansible.builtin.shell: sh -c "iptables-save > /etc/iptables.ipv4.nat"
  - ansible.builtin.blockinfile:
      path: /etc/rc.local
      block: |
        iptables-restore < /etc/iptables.ipv4.nat  
      insertbefore: exit 0
