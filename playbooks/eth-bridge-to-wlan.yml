- name: Route traffic from eth0 to wlan0
  hosts: rpi
  vars_files: common.yml 
  become: yes
  tasks:
  - apt: 
      pkg:
      - dnsmasq
      - iptables
  - name: Enable nat postrouting
    ansible.builtin.iptables:
      table: nat
      chain: POSTROUTING
      out_interface: wlan0
      jump: MASQUERADE
  - name: Enable nat forward down
    ansible.builtin.iptables:
      chain: FORWARD
      in_interface: wlan0
      out_interface: eth0
      state: present
      ctstate: RELATED,ESTABLISHED
      jump: ACCEPT
  - name: Enable nat forward up
    ansible.builtin.iptables:
      chain: FORWARD
      in_interface: eth0
      out_interface: wlan0
      jump: ACCEPT
  - ansible.builtin.shell: sh -c "iptables-save > /etc/iptables.ipv4.nat"
  - ansible.builtin.blockinfile:
      path: /etc/rc.local
      block: |
        iptables-restore < /etc/iptables.ipv4.nat  
      insertbefore: exit 0

  - ansible.builtin.blockinfile:
      path: /etc/dhcpcd.conf
      block: |
        interface eth0
            static ip_address=192.168.200.1/24            
  - ansible.builtin.copy:
      src: etc/dnsmasq.d/router.conf
      dest: /etc/dnsmasq.d/router.conf
      owner: root
      group: root
  - ansible.builtin.copy:
      src: "etc/network/interfaces.d/eth0"
      dest: "/etc/network/interfaces.d/"
      owner: root
      group: root
  - name: Enable ip forward
    ansible.builtin.lineinfile:
      path: /etc/sysctl.conf
      regexp: "^#net.ipv4.ip_forward=1"
      line: "net.ipv4.ip_forward=1"

#sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE  
#$ sudo iptables -A FORWARD -i wlan0 -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT  
#$ sudo iptables -A FORWARD -i eth0 -o wlan0 -j ACCEPT

